#Login Azure
az login --use-device-code

#Parametros
rg=rg-networking-cni
local=eastus
sku=Standard_B2s
aks=aks-network-cni
vnet=vnet-aks-cni
snet=snet-aks-cni
app=cni-app

#Grupo de recursos
az group create -n $rg -l $local

#Criar vnet e subnet
az network vnet create -g $rg -n $vnet \
    --address-prefix 192.168.0.0/16 \
    --subnet-name $snet \
    --subnet-prefix 192.168.1.0/24

#Listar as vnets
az network vnet list -o table

#obter id da vnet
vnetId=$(az network vnet show -g $rg -n $vnet --query id -o tsv)

#obter id da subnet
snetId=$(az network vnet subnet show -g $rg --vnet-name $vnet -n $snet --query id -o tsv)

# Se estiver usando Bash no Windows ######
export MSYS_NO_PATHCONV=1

#Criar role para aks e vnet
az ad sp create-for-rbac -n $app

#Criar como variavel o valor de appId e password
appId=b5f049df-1071-4363-8d92-3fdb18fc416f
pass=jgb8Q~sq~LaTIqqA~7ad1ZI43LrgTjYjt999cccm

#Listar app registrations
az ad app list -o table

#Atribuir permissao a vnet como network contributor
az role assignment create --assignee $appId --scope $vnetId --role "Network Contributor"

# Criar AKS com kubenet
az aks create -g $rg -n $aks --node-count 1 --node-vm-size $sku \
    --network-plugin azure \
    --service-cidr 10.1.0.0/24 \
    --dns-service-ip 10.1.0.10 \
    --docker-bridge-address 172.17.0.1/16 \
    --vnet-subnet-id $snetId \
    --service-principal $appId \
    --client-secret $pass

# Verificar o plugin de network do cluster aks
az aks show -g $rg -n $aks --query {NetworkPlugin:networkProfile.networkPlugin} -o table


#limpando
rg2=MC_rg-networking-cni_aks-network-cni_eastus
rg3=NetworkWatcherRG

#Deletar o Resource Group
az group delete -n $rg -y
az group delete -n $rg2 -y
az group delete -n $rg3 -y
